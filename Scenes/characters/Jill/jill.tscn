[gd_scene load_steps=18 format=3 uid="uid://fjoshq8g2rxd"]

[ext_resource type="Texture2D" uid="uid://dsphonu2hgoai" path="res://Characters/Jill Valentine/8by8palette.jpg" id="1_x0fi1"]
[ext_resource type="Script" path="res://Scenes/characters/Jill/jill.gd" id="2_steuv"]
[ext_resource type="PackedScene" uid="uid://h2cxolpx00yq" path="res://Scenes/characters/spr_jill.tscn" id="3_63h5k"]
[ext_resource type="Script" path="res://Scenes/Hitboxes.gd" id="4_oc5ri"]
[ext_resource type="AnimationNodeBlendTree" uid="uid://30vijdtfimn4" path="res://Scenes/characters/Jill/jill.tres" id="5_4yrhh"]
[ext_resource type="Script" path="res://Scenes/characters/collisionArea.gd" id="5_n35ws"]
[ext_resource type="AnimationLibrary" uid="uid://dvre72jvf85b7" path="res://Scenes/characters/Lilith/lilith.res" id="5_xshi4"]

[sub_resource type="Shader" id="1"]
code = "shader_type canvas_item;
const float precision = 0.1;
//uniform vec4 chroma_key: source_color = vec4(248.0,0.0,248.0,255.0);
//uniform vec4 chroma_key_replace: source_color = vec4(0.0,0.0,0.0,0.0);
//uniform float tolerance: hint_range(0.0,1.0) = 0.5;
uniform sampler2D palette;
uniform vec4 color1: source_color = vec4(68.0,88.0,219.0,255.0);
uniform vec4 color2: source_color = vec4(69.0,118.0,255.0,255.0);
uniform vec4 color3: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color4: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color5: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color6: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color7: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color8: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color9: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color10: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color11: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color12: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color13: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color14: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color15: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color16: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color17: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color18: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color19: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color20: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color21: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color22: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color23: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color24: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 color25: source_color = vec4(248.0,0.0,248.0,255.0);
//New palette
uniform vec4 newColor1: source_color = vec4(68.0,88.0,219.0,255.0);
uniform vec4 newColor2: source_color = vec4(69.0,118.0,255.0,255.0);
uniform vec4 newColor3: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor4: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor5: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor6: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor7: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor8: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor9: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor10: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor11: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor12: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor13: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor14: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor15: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor16: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor17: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor18: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor19: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor20: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor21: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor22: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor23: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor24: source_color = vec4(248.0,0.0,248.0,255.0);
uniform vec4 newColor25: source_color = vec4(248.0,0.0,248.0,255.0);

vec4 swap_color(vec4 color){
	vec4 original_colors[25] = vec4[25] (color1, color2, color3, color4, color5, color6, color7, color8, color9, color10, color11, color12, color13, color14, color15, color16, color17, color18, color19, color20, color21, color22, color23, color24, color25);
	vec4 replace_colors[25] = vec4[25] (newColor1, newColor2, newColor3, newColor4, newColor5, newColor6, newColor7, newColor8, newColor9, newColor10, newColor11, newColor12, newColor13, newColor14, newColor15, newColor16, newColor17, newColor18, newColor19, newColor20, newColor21, newColor22, newColor23, newColor24, newColor25);
	for (int i = 0; i < 25; i ++) {
		if (distance(color, original_colors[i]) <= precision){
			return replace_colors[i];
		}
	}
	return color;
}

void fragment(){
	vec4 color_a = texture(TEXTURE, UV);
	//color_a.b = 0.0;
	//vec3 color = color_a.rgb;
	//float a = color_a.a;
	//float chroma_key_len = length(chroma_key.rgb);
	//float c_len = length(color);
	
	//vec3 chroma_key_norm = chroma_key.rgb / chroma_key_len * c_len;
	//vec3 chroma_replace_norm = chroma_key_replace.rgb / chroma_key_len * c_len;
	
	//float chroma_dist = distance(color, chroma_key_norm) * 5.0 ;
	//color = mix(chroma_replace_norm, color, step(tolerance,chroma_dist));
	if (color_a.r < 248.0 && color_a.g == 0.0 && color_a.b < 248.00) { //Opacity
        color_a.a = 0.0;
    }
	//color_a = vec4(color_a.r, color_a.g, 0, color_a.a);
	//if (color_a.r == color1.r && color_a.g == color1.g && color_a.b == color1.b) {
        //color_a = vec4(newColor1.r, newColor1.g, newColor1.b, color_a.a);
    //}else if (color_a.r == color2.r && color_a.g == color2.g && color_a.b == color2.b) {
        //color_a = vec4(newColor2.r, newColor2.g, newColor2.b, color_a.a);
    //}else if (color_a.r == color3.r && color_a.g == color3.g && color_a.b == color3.b) {
        //color_a = vec4(newColor3.r, newColor3.g, newColor3.b, color_a.a);
    //}
	//vec4 rgba = texture(TEXTURE, UV);
	//vec4 finalColor = texture(palette, vec2(color_a.r, color_a.g));
	//finalColor.a = color_a.a;
	
	//COLOR = finalColor;
	COLOR = swap_color(color_a);
}
"

[sub_resource type="ShaderMaterial" id="2"]
resource_local_to_scene = true
shader = SubResource("1")
shader_parameter/color1 = Color(0.333333, 0.866667, 1, 1)
shader_parameter/color2 = Color(0.2, 0.666667, 1, 1)
shader_parameter/color3 = Color(0.266667, 0.533333, 1, 1)
shader_parameter/color4 = Color(0.266667, 0.4, 0.866667, 1)
shader_parameter/color5 = Color(0.2, 0.266667, 0.6, 1)
shader_parameter/color6 = Color(0.0666667, 0.133333, 0.466667, 1)
shader_parameter/color7 = Color(0, 0.0666667, 0.266667, 1)
shader_parameter/color8 = Color(0.133333, 0.0666667, 0, 1)
shader_parameter/color9 = Color(0.4, 0.333333, 0.266667, 1)
shader_parameter/color10 = Color(0.733333, 0.666667, 0.6, 1)
shader_parameter/color11 = Color(0.533333, 0.266667, 0, 1)
shader_parameter/color12 = Color(0.933333, 0.6, 0.4, 1)
shader_parameter/color13 = Color(0.733333, 0.4, 0.2, 1)
shader_parameter/color14 = Color(1, 0.8, 0.6, 1)
shader_parameter/color15 = Color(1, 0.933333, 0.733333, 1)
shader_parameter/color16 = Color(0.533333, 0.6, 0.666667, 1)
shader_parameter/color17 = Color(0.266667, 0.333333, 0.4, 1)
shader_parameter/color18 = Color(0.4, 0.466667, 0.533333, 1)
shader_parameter/color19 = Color(0.733333, 0.8, 0.866667, 1)
shader_parameter/color20 = Color(0.866667, 0.933333, 1, 1)
shader_parameter/color21 = Color(0.133333, 0.2, 0.266667, 1)
shader_parameter/color22 = Color(0.6, 0.4, 0, 1)
shader_parameter/color23 = Color(0.866667, 0.6, 0, 1)
shader_parameter/color24 = Color(248, 0, 248, 255)
shader_parameter/color25 = Color(248, 0, 248, 255)
shader_parameter/newColor1 = Color(0.333333, 0.866667, 1, 1)
shader_parameter/newColor2 = Color(0.2, 0.666667, 1, 1)
shader_parameter/newColor3 = Color(0.266667, 0.533333, 1, 1)
shader_parameter/newColor4 = Color(0.266667, 0.4, 0.866667, 1)
shader_parameter/newColor5 = Color(0.2, 0.266667, 0.6, 1)
shader_parameter/newColor6 = Color(0.0666667, 0.133333, 0.466667, 1)
shader_parameter/newColor7 = Color(0, 0.0666667, 0.266667, 1)
shader_parameter/newColor8 = Color(0.133333, 0.0666667, 0, 1)
shader_parameter/newColor9 = Color(0.4, 0.333333, 0.266667, 1)
shader_parameter/newColor10 = Color(0.733333, 0.666667, 0.6, 1)
shader_parameter/newColor11 = Color(0.533333, 0.266667, 0, 1)
shader_parameter/newColor12 = Color(0.933333, 0.6, 0.4, 1)
shader_parameter/newColor13 = Color(0.733333, 0.4, 0.2, 1)
shader_parameter/newColor14 = Color(1, 0.8, 0.6, 1)
shader_parameter/newColor15 = Color(1, 0.933333, 0.733333, 1)
shader_parameter/newColor16 = Color(0.533333, 0.6, 0.666667, 1)
shader_parameter/newColor17 = Color(0.266667, 0.333333, 0.4, 1)
shader_parameter/newColor18 = Color(0.4, 0.466667, 0.533333, 1)
shader_parameter/newColor19 = Color(0.733333, 0.8, 0.866667, 1)
shader_parameter/newColor20 = Color(0.866667, 0.933333, 1, 1)
shader_parameter/newColor21 = Color(0.133333, 0.2, 0.266667, 1)
shader_parameter/newColor22 = Color(0.6, 0.4, 0, 1)
shader_parameter/newColor23 = Color(0.866667, 0.6, 0, 1)
shader_parameter/newColor24 = Color(1, 0, 1, 1)
shader_parameter/newColor25 = Color(1, 0, 1, 1)
shader_parameter/palette = ExtResource("1_x0fi1")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_educ5"]
size = Vector2(34, 88)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_l40to"]
size = Vector2(1, 1)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_x4kfw"]
resource_local_to_scene = true
size = Vector2(47, 59)

[sub_resource type="RectangleShape2D" id="5"]
resource_local_to_scene = true
size = Vector2(0, 0)

[sub_resource type="Animation" id="Animation_ml7xx"]
length = 0.001
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["default"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Hurtboxes/Hurtbox:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(-0.5, 11)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Hitboxes/Hitbox:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../CollisionBox:shape:size")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(34, 88)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Hitboxes/Hitbox:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(89.5, -17.5)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Hitboxes/Hitbox:shape:size")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(0, 0)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Hitboxes:hitstop")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [15]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../Hitboxes:vstun")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [10]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../Hurtboxes/Hurtbox:shape:size")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(47, 59)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../Hitboxes:hitProperty")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("../Hurtboxes/Hurtbox:disabled")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("../collisionArea/collisionAreaCollision:position")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(0, 4)]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("../collisionArea/collisionAreaCollision:shape:size")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2(32, 88)]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("../Hitboxes:stunVector")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(500, -50)]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("../grabPosition:position")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(56, -16)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_yv7pk"]
resource_local_to_scene = true
_data = {
"RESET": SubResource("Animation_ml7xx")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_mmfye"]
resource_local_to_scene = true
size = Vector2(32, 88)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_53n7y"]
size = Vector2(1, 1)

[node name="charBody2D" type="CharacterBody2D" node_paths=PackedStringArray("animatedSprite", "animatedTree") groups=["CollisionBox"]]
material = SubResource("2")
collision_layer = 0
collision_mask = 4
floor_block_on_wall = false
script = ExtResource("2_steuv")
jumpCancel = true
moveSpeed = Vector2(500, 0)
animatedSprite = NodePath("sprJill")
animatedTree = NodePath("AnimationPlayer/AnimationTree")

[node name="CollisionBox" type="CollisionShape2D" parent="."]
position = Vector2(0, 5)
shape = SubResource("RectangleShape2D_educ5")

[node name="sprJill" parent="." instance=ExtResource("3_63h5k")]
animation = &"default"
frame = 0
frame_progress = 0.0

[node name="anchorPoint" type="Area2D" parent="."]
position = Vector2(0, 48)
collision_layer = 256
collision_mask = 256

[node name="anchorCollision" type="CollisionShape2D" parent="anchorPoint"]
position = Vector2(0, 8)
shape = SubResource("RectangleShape2D_l40to")
debug_color = Color(1, 1, 1, 1)

[node name="Marker2D" type="Marker2D" parent="anchorPoint"]
position = Vector2(0, 48)

[node name="tmrKnockdown" type="Timer" parent="."]
one_shot = true

[node name="Hurtboxes" type="Area2D" parent="." groups=["Hurtboxes"]]
collision_layer = 2
collision_mask = 0

[node name="Hurtbox" type="CollisionShape2D" parent="Hurtboxes"]
light_mask = 2
visibility_layer = 4
position = Vector2(-0.5, 11)
shape = SubResource("RectangleShape2D_x4kfw")
debug_color = Color(0, 0.647059, 0.254902, 0.419608)

[node name="Hitboxes" type="Area2D" parent="." groups=["Hitboxes"]]
collision_layer = 4
collision_mask = 10
script = ExtResource("4_oc5ri")
stun = 35
stunVector = Vector2(500, -50)
damage = 750
hitstop = 15
vstun = 10

[node name="Hitbox" type="CollisionShape2D" parent="Hitboxes"]
light_mask = 4
visibility_layer = 2
position = Vector2(89.5, -17.5)
shape = SubResource("5")
disabled = true
debug_color = Color(1, 0, 0.0784314, 0.419608)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
active = false
reset_on_save = false
root_node = NodePath("../sprJill")
libraries = {
"": SubResource("AnimationLibrary_yv7pk"),
"Jill": ExtResource("5_xshi4")
}

[node name="AnimationTree" type="AnimationTree" parent="AnimationPlayer"]
active = false
root_node = NodePath("../../sprJill")
tree_root = ExtResource("5_4yrhh")
anim_player = NodePath("..")
parameters/Attacking/current_state = "HP"
parameters/Attacking/transition_request = ""
parameters/Attacking/current_index = 2
parameters/CrouchAttacking/current_state = ""
parameters/CrouchAttacking/transition_request = ""
parameters/CrouchAttacking/current_index = -1
parameters/CrouchHit/current_state = ""
parameters/CrouchHit/transition_request = ""
parameters/CrouchHit/current_index = -1
parameters/CrouchingAction/current_state = ""
parameters/CrouchingAction/transition_request = ""
parameters/CrouchingAction/current_index = -1
parameters/Hit/current_state = "hit"
parameters/Hit/transition_request = ""
parameters/Hit/current_index = 1
parameters/IdleState/current_state = "idle"
parameters/IdleState/transition_request = ""
parameters/IdleState/current_index = 0
parameters/Jump/current_state = "falling"
parameters/Jump/transition_request = ""
parameters/Jump/current_index = 1
parameters/JumpAttacking/current_state = "LK"
parameters/JumpAttacking/transition_request = ""
parameters/JumpAttacking/current_index = 3
parameters/JumpHit/current_state = ""
parameters/JumpHit/transition_request = ""
parameters/JumpHit/current_index = -1
parameters/JumpingAction/current_state = "attacking"
parameters/JumpingAction/transition_request = ""
parameters/JumpingAction/current_index = 2
parameters/Movement/current_state = "idle"
parameters/Movement/transition_request = ""
parameters/Movement/current_index = 0
parameters/StandingAction/current_state = "idle"
parameters/StandingAction/transition_request = ""
parameters/StandingAction/current_index = 0
parameters/State/current_state = "standing"
parameters/State/transition_request = ""
parameters/State/current_index = 0
parameters/TimeScale/scale = 1.0
parameters/jumpDirection/current_state = ""
parameters/jumpDirection/transition_request = "backwards"
parameters/jumpDirection/current_index = -1
parameters/knockDownAction/current_state = ""
parameters/knockDownAction/transition_request = "airborne"
parameters/knockDownAction/current_index = -1

[node name="collisionArea" type="Area2D" parent="." groups=["CollisionBox"]]
collision_layer = 8
collision_mask = 8
script = ExtResource("5_n35ws")

[node name="collisionAreaCollision" type="CollisionShape2D" parent="collisionArea" groups=["CollisionBox"]]
position = Vector2(0, 4)
shape = SubResource("RectangleShape2D_mmfye")
debug_color = Color(0.105957, 0, 0.732455, 0.42)

[node name="grabPosition" type="CollisionShape2D" parent="."]
position = Vector2(56, -16)
shape = SubResource("RectangleShape2D_53n7y")
disabled = true
debug_color = Color(0.398854, 0.0011998, 0.59075, 0.42)

[connection signal="body_entered" from="anchorPoint" to="." method="_on_anchor_point_body_entered"]
[connection signal="body_exited" from="anchorPoint" to="." method="_on_anchor_point_body_exited"]
[connection signal="timeout" from="tmrKnockdown" to="." method="_on_tmr_knockdown_timeout"]
[connection signal="area_entered" from="Hitboxes" to="." method="_on_hitboxes_area_entered"]
[connection signal="area_entered" from="Hitboxes" to="Hitboxes" method="_on_area_entered"]
